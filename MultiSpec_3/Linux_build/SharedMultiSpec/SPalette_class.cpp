//                                     MultiSpec
//
//                   Copyright 1988-2020 Purdue Research Foundation
//
// Licensed under the Apache License, Version 2.0 (the "License"); you may not use
// this file except in compliance with the License. You may obtain a copy of the
// License at:  https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software distributed
// under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
// CONDITIONS OF ANY KIND, either express or implied. See the License for the specific
// language governing permissions and limitations under the License.
//
// MultiSpec is curated by the Laboratory for Applications of Remote Sensing at
// Purdue University in West Lafayette, IN and licensed by Larry Biehl.
//
//	File:						SPalette_class.cpp
//	Class Definition:		SPalette_class.h
//
//	Authors:					Larry L. Biehl
//
//	Revision date:			11/25/2019
//
//	Language:				C++
//
//	System:					Linux and Windows Operating Systems
//
//	Brief description:	This file contains routines for the CMPalette class.
//
//------------------------------------------------------------------------------------

#include "SMultiSpec.h"

#include "SDisplay_class.h"
#include "SPalette_class.h"


// === Static Member Variable ===

UInt16		CMPalette::s_palette1001[117] = {65535, 65535, 65535,
													     		 0,     0,     0,
													 		65280, 65024, 35072,
													 		  768,  7168, 61696,
													 		65280, 22784,   256,
													 		 1280, 65280, 34048,
													 		65280,   512, 64256,
													 		22784,   256, 65280,
													 		  768, 43776, 65280,
													 		 3072, 65280,  1792,
													 		44032, 44800, 21504,
													 		40960, 19968, 40448,
													 		26078, 44421, 65535,
													 		15360, 23296, 28672,
													 		26624, 49152, 16128,
													 		35584, 17664, 11776,
													 		30464, 65280, 44032,
													 		65024, 65280,   768,
													 		43520, 65280,  3072,
													 		61696, 50944, 47616,
													 		19456, 30976, 17408,
													 		49152, 65280, 40960,
													 		33792,  4096,  5120,
													 		 1310,  1310, 23592,
													 		  881, 50943, 40649,
													 		    0, 40960,     0,
													 		56683,  2242,  1698,
													 		49152, 49152, 49152,
													 		65535, 50140, 33120,
													 		32768,     0, 65535,
													 		35328,   512, 35840,
													 		56576, 37392,  2048,
													 		32768, 32768, 32768,
													 		64512, 32333, 20000,
															10000, 30000, 64000,
															18504, 64250,     0,
															65278, 10537,     0,
															65278, 44297,     0,
															 2816,  7936,     0};

UInt16		CMPalette::s_palette1002[396] = {65535, 65535, 65535,
													     		 0,     0,     0,
													 		16384, 16384, 16384,
													 		49152, 49152, 49152,
													 		 8192,  8192,  8192,
													 		40960, 40960, 40960,
													 		24576, 24576, 24576,
													 		57344, 57344, 57344,
													 		36864, 36864, 36864,
													 		 4096,  4096,  4096,
													 		45056, 45056, 45056,
													 		12288, 12288, 12288,
													 		53248, 53248, 53248,
													 		20480, 20480, 20480,
													 		61440, 61440, 61440,
													 		28672, 28672, 28672,
													 		34816, 34816, 34816,
													 		 2048,  2048,  2048,
													 		38912,  38912, 38912,
													 		 6144,  6144,  6144,
													 		43008, 43008, 43008,
													 		10240, 10240, 10240,
													 		47104, 47104, 47104,
													 		14336, 14336, 14336,
													 		51200, 51200, 51200,
													 		18432, 18432, 18432,
													 		55296, 55296, 55296,
													 		22528, 22528, 22528,
													 		59392, 59392, 59392,
													 		26624, 26624, 26624,
													 		63488, 63488, 63488,
													 		30720, 30720, 30720,
													 		33792, 33792, 33792,
													 		 1024,  1024,  1024,
													 		35840, 35840, 35840,
													 		 3072,  3072,  3072,
													 		37888, 37888, 37888,
													 		 5120,  5120,  5120,
													 		39936, 39936, 39936,
													 		 7168,  7168,  7168,
													 		41984, 41984, 41984,
													 		 9216,  9216,  9216,
													 		44032, 44032, 44032,
													 		11264, 11264, 11264,
													 		46080, 46080, 46080,
													 		13312, 13312, 13312,
													 		48128, 48128, 48128,
													 		15360, 15360, 15360,
													 		50176, 50176, 50176,
													 		17408, 17408, 17408,
													 		52224, 52224, 52224,
													 		19456, 19456, 19456,
													 		54272, 54272, 54272,
													 		21504, 21504, 21504,
													 		56320, 56320, 56320,
													 		23552, 23552, 23552,
													 		58368, 58368, 58368,
													 		25600, 25600, 25600,
													 		60416, 60416, 60416,
													 		27648, 27648, 27648,
													 		54272, 54272, 54272,
													 		29696, 29696, 29696,
													 		56320, 56320, 56320,
													 		31744, 31744, 31744,
													 		58368, 58368, 58368,
													 		60416, 60416, 60416,
													 		33280, 33280, 33280,
													 		  512,   512,   512,
													 		34304, 34304, 34304,
													 		 1536,  1536,  1536,
													 		35328, 35328, 35328,
													 		 2560,  2560,  2560,
													 		36352, 36352, 36352,
													 		 3584,  3584,  3584,
													 		37376, 37376, 37376,
													 		 4608,  4608,  4608,
													 		38400, 38400, 38400,
													 		 5632,  5632,  5632,
													 		39424, 39424, 39424,
													 		 6656,  6656,  6656,
													 		40448, 40448, 40448,
													 		 7680,  7680,  7680,
													 		41472, 41472, 41472,
													 		 8704,  8704,  8704,
													 		42496, 42496, 42496,
													 		 9728,  9728,  9728,
													 		43520, 43520, 43520,
													 		10752, 10752, 10752,
													 		44544, 44544, 44544,
													 		11776, 11776, 11776,
													 		45568, 45568, 45568,
													 		12800, 12800, 12800,
													 		46592, 46592, 46592,
													 		13824, 13824, 13824,
													 		47616, 47616, 47616,
													 		14848, 14848, 14848,
													 		48640, 48640, 48640,
													 		15872, 15872, 15872,
													 		49664, 49664, 49664,
													 		16896, 16896, 16896,
													 		50688, 50688, 50688,
													 		17920, 17920, 17920,
													 		51172, 51172, 51172,
													 		18944, 18944, 18944,
													 		52736, 52736, 52736,
													 		19968, 19968, 19968,
													 		53760, 53760, 53760,
													 		20992, 20992, 20992,
													 		54784, 54784, 54784,
													 		22016, 22016, 22016,
													 		55808, 55808, 55808,
													 		23040, 23040, 23040,
													 		56832, 56832, 56832,
													 		24064, 24064, 24064,
													 		57856, 57856, 57856,
													 		25088, 25088, 25088,
													 		58880, 58880, 58880,
													 		26112, 26112, 26112,
													 		59904, 59904, 59904,
													 		27136, 27136, 27136,
													 		60928, 60928, 60928,
													 		28160, 28160, 28160,
													 		61952, 61952, 61952,
													 		29184, 29184, 29184,
													 		62976, 62976, 62976,
													 		30208, 30208, 30208,
													 		64000, 64000, 64000,
													 		31232, 31232, 31232,
													 		65024, 65024, 65024,
													 		32256, 32256, 32256,
													 		32768, 32768, 32768,
													 		65280, 65280, 65280}; 
		
UInt16		CMPalette::s_palette1003[759] = {65535, 65535, 65535,	// index=0
													     		 0,     0,     0,
													     		 0,     0,     0,
													     		 0,  1285, 65278,
													     		 0,  2313, 65278,
													     		 0,  3341, 65278,
													     		 0,  4369, 65278,
													     		 0,  5397, 65278,
													     		 0,  6425, 65278,
													     		 0,  7453, 65278,
													     		 0,  8481, 65278,
													     		 0,  9509, 65278,
													     		 0, 10537, 65278,
													     		 0, 11565, 65278,
													     		 0, 12593, 65278,
													     		 0, 13621, 65278,
													     		 0, 14649, 65278, // index=16
													     		 0, 15677, 65278,
													     		 0, 16705, 65278,
													     		 0, 17733, 65278,
													     		 0, 18761, 65278,
													     		 0, 19789, 65278,
													     		 0, 20817, 65278,
													     		 0, 21845, 65278,
													     		 0, 22873, 65278,
													     		 0, 23901, 65278,
													     		 0, 24929, 65278,
													     		 0, 25957, 65278,
													     		 0, 26985, 65278,
													     		 0, 28013, 65278,
													     		 0, 29041, 65278,
													     		 0, 30069, 65278,
													     		 0, 31097, 65278, // index=32
													     		 0, 32125, 65278,
													     		 0, 33153, 65278,
													     		 0, 34181, 65278,
													     		 0, 35209, 65278,
													     		 0, 36237, 65278,
													     		 0, 37265, 65278,
													     		 0, 38293, 65278,
													     		 0, 39321, 65278,
													     		 0, 40349, 65278,
													     		 0, 41377, 65278,
													     		 0, 42405, 65278,
													     		 0, 43433, 65278,
													     		 0, 44461, 65278,
													     		 0, 45489, 65278,
													     		 0, 46517, 65278,
													     		 0, 47545, 65278, // index=48
													     		 0, 48573, 65278,
													     		 0, 49601, 65278,
													     		 0, 50629, 65278,
													     		 0, 51657, 65278,
													     		 0, 52685, 65278,
													     		 0, 53713, 65278,
													     		 0, 54741, 65278,
													     		 0, 55769, 65278,
													     		 0, 56797, 65278,
													     		 0, 57825, 65278,
													     		 0, 58853, 65278,
													     		 0, 59881, 65278,
													     		 0, 60909, 65278,
													     		 0, 61937, 65278,
													     		 0, 62965, 65278,
													     		 0, 63993, 65278, // index=64
													     		 0, 65021, 63736,
													     		 0, 64250, 62708,
													     		 0, 64250, 61680,
													     		 0, 64250, 60652,
													     		 0, 64250, 59624,
													     		 0, 64250, 58596,
													     		 0, 64250, 57568,
													     		 0, 64250, 56540,
													     		 0, 64250, 55512,
													     		 0, 64250, 54484,
													     		 0, 64250, 53456,
													     		 0, 64250, 52428,
													     		 0, 64250, 51400,
													     		 0, 64250, 50372,
													     		 0, 64250, 49344,
													     		 0, 64250, 48316, // index=80
													     		 0, 64250, 47288,
													     		 0, 64250, 46620,
													     		 0, 64250, 45232,
													     		 0, 64250, 44204,
													     		 0, 64250, 43176,
													     		 0, 64250, 42148,
													     		 0, 64250, 41120,
													     		 0, 64250, 40092,
													     		 0, 64250, 39064,
													     		 0, 64250, 38036,
													     		 0, 64250, 37008,
													     		 0, 64250, 35980,
													     		 0, 64250, 34952,
													     		 0, 64250, 33924,
													     		 0, 64250, 32896,
													     		 0, 64250, 31868, // index=96
													     		 0, 64250, 30840,
													     		 0, 64250, 29812,
													     		 0, 64250, 28874,
													     		 0, 64250, 27756,
													     		 0, 64250, 26728,
													     		 0, 64250, 25700,
													     		 0, 64250, 24672,
													     		 0, 64250, 23644,
													     		 0, 64250, 22616,
													     		 0, 64250, 21588,
													     		 0, 64250, 20560,
													     		 0, 64250, 19532,
													     		 0, 64250, 18504,
													     		 0, 64250, 17476,
													     		 0, 64250, 16448,
													     		 0, 64250, 15420, // index=112
													     		 0, 64250, 14392,
													     		 0, 64250, 13364,
													     		 0, 64250, 12336,
													     		 0, 64250, 11308,
													     		 0, 64250, 10280,
													     		 0, 64250,  9252,
													     		 0, 64250,  8224,
													     		 0, 64250,  7196,
													     		 0, 64250,  6168,
													     		 0, 64250,  5140,
													     		 0, 64250,  4112,
													     		 0, 64250,  3084,
													     		 0, 64250,  2056,
													     		 0, 64250,  1028,
													     		 0, 64250,     0,
													     	 1028, 64250,     0, // index=128
													     	 2056, 64250,     0,
													     	 3084, 64250,     0,
													     	 4112, 64250,     0,
													     	 5140, 64250,     0,
													     	 6168, 64250,     0,
													     	 7196, 64250,     0,
													     	 8224, 64250,     0,
													     	 9252, 64250,     0,
													     	10280, 64250,     0,
													     	11308, 64250,     0,
													     	12336, 64250,     0,
													     	13364, 64250,     0,
													     	14392, 64250,     0,
													     	15420, 64250,     0,
													     	16448, 64250,     0,
													     	17476, 64250,     0, // index=144
													     	18504, 64250,     0,
													     	19532, 64250,     0,
													     	20560, 64250,     0,
													     	21588, 64250,     0,
													     	22616, 64250,     0,
													     	23644, 64250,     0,
													     	24672, 64250,     0,
													     	25700, 64250,     0,
													     	26728, 64250,     0,
													     	27756, 64250,     0,
													     	28784, 64250,     0,
													     	29812, 64250,     0,
													     	30840, 64250,     0,
													     	31868, 64250,     0,
													     	32896, 64250,     0,
													     	33924, 64250,     0, // index=160
													     	34952, 64250,     0,
													     	35980, 64250,     0,
													     	37008, 64250,     0,
													     	38036, 64250,     0,
													     	39064, 64250,     0,
													     	40092, 64250,     0,
													     	41120, 64250,     0,
													     	42148, 64250,     0,
													     	43176, 64250,     0,
													     	44204, 64250,     0,
													     	45232, 64250,     0,
													     	46260, 64250,     0,
													     	47288, 64250,     0,
													     	48316, 64250,     0,
													     	49344, 64250,     0,
													     	50372, 64250,     0, // index=176
													     	51400, 64250,     0,
													     	52428, 64250,     0,
													     	53456, 64250,     0,
													     	54484, 64250,     0,
													     	55512, 64250,     0,
													     	56540, 64250,     0,
													     	57568, 64250,     0,
													     	58596, 64250,     0,
													     	59624, 64250,     0,
													     	60652, 64250,     0,
													     	61680, 64250,     0,
													     	62708, 64250,     0,
													     	63736, 65021,     0,
													     	64764, 63993,     0,
													     	65278, 62965,     0,
													     	65278, 61937,     0, // index=192
													     	65278, 60909,     0,
													     	65278, 59881,     0,
													     	65278, 58853,     0,
													     	65278, 57825,     0,
													     	65278, 56797,     0,
													     	65278, 55769,     0,
													     	65278, 54741,     0,
													     	65278, 53713,     0,
													     	65278, 52685,     0,
													     	65278, 51657,     0,
													     	65278, 50629,     0,
													     	65278, 49601,     0,
													     	65278, 48573,     0,
													     	65278, 47545,     0,
													     	65278, 46517,     0,
													     	65278, 45489,     0, // index=208
													     	65278, 44461,     0,
													     	65278, 43433,     0,
													     	65278, 42405,     0,
													     	65278, 41377,     0,
													     	65278, 40349,     0,
													     	65278, 39321,     0,
													     	65278, 38293,     0,
													     	65278, 37265,     0,
													     	65278, 36237,     0,
													     	65278, 35209,     0,
													     	65278, 34181,     0,
													     	65278, 33153,     0,
													     	65278, 32125,     0,
													     	65278, 31097,     0,
													     	65278, 30069,     0,
													     	65278, 29041,     0, // index=224
													     	65278, 28013,     0,
													     	65278, 26985,     0,
													     	65278, 25957,     0,
													     	65278, 24929,     0,
													     	65278, 23901,     0,
													     	65278, 22873,     0,
													     	65278, 21845,     0,
													     	65278, 20817,     0,
													     	65278, 19789,     0,
													     	65278, 18761,     0,
													     	65278, 17733,     0,
													     	65278, 16705,     0,
													     	65278, 15677,     0,
													     	65278, 14649,     0,
													     	65278, 13621,     0,
													     	65278, 12593,     0, // index=240
													     	65278, 11565,     0,
													     	65278, 10537,     0,
													     	65278,  9509,     0,
													     	65278,  8481,     0,
													     	65278,  7453,     0,
													     	65278,  6425,     0,
													     	65278,  5397,     0,
													     	65278,  4369,     0,
													     	65278,  3341,     0,
													     	65278,  2313,     0,
													     	65278,  1285,     0,
															35354, 35354, 35354}; // index=252
													    
UInt16		CMPalette::s_palette1004[315] = {65535, 65535, 65535,
													     		 0,     0,     0,
													 		    0, 	  0, 65278,
													 		    0, 16384, 65278,
													 		    0, 32768, 65278,
													 		    0, 49152, 65278,
													 		    0, 64250, 61680,
													 		    0, 64250, 53456, 
													 		    0, 64250, 45232, 
													 		    0, 64250, 37008,
													 		    0, 64250, 28874,
													 		    0, 64250, 22616, 
													 		    0, 64250, 18504,
													 		    0, 64250, 14392,
													 		    0, 64250,  8224,
													 		12336, 64250,     0, 
													 		16448, 64250,     0, 
													 		20560, 64250,     0,
													 		24672, 64250,     0,
													 		28874, 64250,     0,
													 		32896, 64250,     0,
													 		34952, 64250,     0,
													 		39064, 64250,     0,
													 		43176, 64250,     0,
													 		47288, 64250,     0,
													 		51400, 64250,     0, 
													 		55512, 64250,     0, 
													 		59624, 64250,     0,
													 		63736, 65021,     0,
													 		65278, 60909,     0, 
													 		65278, 56797,     0,
													 		65278, 52685,     0,
													 		65278, 48573,     0,
													 		65278, 44461,     0,
													 		65278, 41377,     0, 
													 		65278, 39321,     0,
													 		65278, 37265,     0,
													 		65278, 35209,     0,
													 		65278, 33153,     0,
													 		65278, 31097,     0, 
													 		65278, 29041,     0,
													 		65278, 26985,     0,
													 		65278, 24929,     0,
													 		65278, 22873,     0,
													 		65278, 20817,     0,
													 		65278, 18761,     0,
													 		65278, 16705,     0,
													 		65278, 14649,     0,
													 		65278, 12593,     0,
													 		65278, 10537,     0,
													 		65278,  8481,     0,
													 		65278,  5397,     0,
													 		65278,  2313,     0,
													 		65278,  1285,     0, 
													 		65278,  3341,     0, 
													 		65278,  7453,     0,
													 		65278,  9509,     0,
													 		65278, 11565,     0,
													 		65278, 13621,     0,
													 		65278, 15677,     0,
													 		65278, 17733,     0,
													 		65278, 19789,     0,
													 		65278, 21845,     0,
													 		65278, 23901,     0,
													 		65278, 25957,     0,
													 		65278, 28013,     0,
													 		65278, 30069,     0,
													 		65278, 32125,     0,
													 		65278, 34181,     0,
													 		65278, 36237,     0,
													 		65278, 38293,     0,
													 		65278, 40349,     0,
													 		65278, 42405,     0,
													 		65278, 46517,     0,
													 		65278, 50629,     0,
													 		65278, 54741,     0,
													 		65278, 58853,     0,
													 		65278, 62965,     0,
													 		61680, 64250,     0,
													 		57568, 64250,     0,
													 		53456, 64250,     0,
													 		49344, 64250,     0,
													 		45232, 64250,     0,
													 		41120, 64250,     0,
													 		37008, 64250,     0,
													 		30840, 64250,     0,
													 		26728, 64250,     0,
													 		22616, 64250,     0,
													 		18504, 64250,     0,
													 		14392, 64250,     0,
													 		    0, 64250, 10280,
													 		    0, 64250, 12336,
													 		    0, 64250, 16448, 
													 		    0, 64250, 20560,
													 		    0, 64250, 24672,
													 		    0, 64250, 32896,
													 		    0, 64250, 41120, 
													 		    0, 64250, 49344,
													 		    0, 64250, 57568,
													 		    0, 65535, 65278,
													 		    0, 57344, 65278,
													 		    0, 40960, 65278, 
													 		    0, 24576, 65278, 
													 		    0,  8192, 65278,
													 		35354, 35354, 35354};

UInt16		CMPalette::s_palette1005[372] = {65535, 65535, 65535,
													     		 0,     0,     0,
													 		    0, 	  0, 65278,
													 		    0,  4096, 65278,
													 		    0,  8192, 65278,
													 		    0, 12288, 65278,
													 		    0, 16384, 65278,
													 		    0, 20480, 65278,
													 		    0, 24576, 65278,
													 		    0, 28672, 65278,
													 		    0, 32768, 65278,
													 		    0, 36864, 65278,
													 		    0, 40960, 65278,
													 		    0, 45056, 65278,
													 		    0, 49152, 65278,
													 		    0, 53248, 65278,
													 		    0, 57344, 65278,
													 		    0, 61440, 65278,
													 		    0, 65535, 65278,
													 		    0, 64250, 61680,
													 		    0, 64250, 57568,
													 		    0, 64250, 53456,
													 		    0, 64250, 49344,
													 		    0, 64250, 45232,
													 		    0, 64250, 41120,
													 		    0, 64250, 37008,
													 		    0, 64250, 32896,
													 		    0, 64250, 28874,
													 		    0, 64250, 24672,
													 		    0, 64250, 22616,
													 		    0, 64250, 20560,
													 		    0, 64250, 18504,
													 		    0, 64250, 16448,
													 		    0, 64250, 14392,
													 		    0, 64250, 12336,
													 		    0, 64250, 10280,
													 		    0, 64250,  8224,
													 		    0, 64250,  6168,
													 		    0, 64250,  4112,
													 		    0, 64250,  2056,
													 		    0, 64250,     0,
													 		 2056, 64250,     0,
													 		 4112, 64250,     0,
													 		 6168, 64250,     0,
													 		 8224, 64250,     0,
													 		10280, 64250,     0,
													 		12336, 64250,     0,
													 		14392, 64250,     0,
													 		16448, 64250,     0,
													 		18504, 64250,     0,
													 		20560, 64250,     0,
													 		22616, 64250,     0,
													 		24672, 64250,     0,
													 		26728, 64250,     0,
													 		28874, 64250,     0,
													 		30840, 64250,     0,
													 		32896, 64250,     0,
													 		34952, 64250,     0,
													 		37008, 64250,     0,
													 		39064, 64250,     0,
													 		41120, 64250,     0,
													 		43176, 64250,     0,
													 		45232, 64250,     0,
													 		47288, 64250,     0,
													 		49344, 64250,     0,
													 		51400, 64250,     0,
													 		53456, 64250,     0,
													 		55512, 64250,     0,
													 		57568, 64250,     0,
													 		59624, 64250,     0,
													 		61680, 64250,     0,
													 		63736, 65021,     0,
													 		65278, 62965,     0,
													 		65278, 60909,     0,
													 		65278, 58853,     0,
													 		65278, 56797,     0,
													 		65278, 54741,     0,
													 		65278, 52685,     0,
													 		65278, 50629,     0,
													 		65278, 48573,     0,
													 		65278, 46517,     0,
													 		65278, 44461,     0,
													 		65278, 42405,     0,
													 		65278, 41377,     0,
													 		65278, 40349,     0,
													 		65278, 39321,     0,
													 		65278, 38293,     0,
													 		65278, 37265,     0,
													 		65278, 36237,     0,
													 		65278, 35209,     0,
													 		65278, 34181,     0,
													 		65278, 33153,     0,
													 		65278, 32125,     0,
													 		65278, 31097,     0,
													 		65278, 30069,     0,
													 		65278, 29041,     0,
													 		65278, 28013,     0,
													 		65278, 26985,     0,
													 		65278, 25957,     0,
													 		65278, 24929,     0,
													 		65278, 23901,     0,
													 		65278, 22873,     0,
													 		65278, 21845,     0,
													 		65278, 20817,     0,
													 		65278, 19789,     0,
													 		65278, 18761,     0,
													 		65278, 17733,     0,
													 		65278, 16705,     0,
													 		65278, 15677,     0,
													 		65278, 14649,     0,
													 		65278, 13621,     0,
													 		65278, 12593,     0,
													 		65278, 11565,     0,
													 		65278, 10537,     0,
													 		65278,  9509,     0,
													 		65278,  8481,     0,
													 		65278,  7453,     0,
													 		65278,  6424,     0,
													 		65278,  5397,     0,
													 		65278,  4369,     0,
													 		65278,  3341,     0,
													 		65278,  2313,     0,
													 		65278,  1285,     0,
													 		35354, 35354, 35354};
		
UInt16		CMPalette::s_palette1006[768] = {65535, 65535, 65535,
													     		 0,     0,     0,
													     		 0,     0,     0,
													     		 0,     0, 65280,
													     		 0,     0,     0,
													     	51200, 25600, 19200,
													     	51200, 25600, 19200,
													     	25600, 35840, 25600,
													     	25600, 35840, 25600,
													     	25600, 35840, 25600,
													     	25600, 35840, 25600,
													     	 7680, 17920, 51200,
													     	 7680, 17920, 51200,
													     	 7680, 17920, 51200,
													     	 7680, 17920, 51200,
													     	33280, 51200, 25600, // index=16
													     	33280, 51200, 25600,
													     	33280, 51200, 25600,
													     	33280, 51200, 25600,
													     	20480, 43520,  7680,
													     	20480, 43520,  7680,
													     	20480, 43520,  7680,
													     	20480, 43520,  7680,
													     	 7680,  7680,  7680,
													     	 7680,  7680,  7680,
													     	 7680,  7680,  7680,
													     	 7680,  7680,  7680,
													     	 7680, 51200, 35840,
													     	 7680, 51200, 35840,
													     	 7680, 51200, 35840,
													     	 7680, 51200, 35840,
													     	51200, 25600, 38400,	// index=32
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,	// index=48
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,	// index=64
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,	// index=80
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400, // index=96
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 25600, 38400,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200, // index=112
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	51200, 51200, 51200,
													     	45056, 45056, 45056,
													     	45056, 45056, 45056,
													     	45056, 45056, 45056,
													     	45056, 45056, 45056,
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,	// index=128
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,
													     	49408, 40960, 33280,
													     	43520, 25344, 18176,
													     	43520, 25344, 18176,
													     	43520, 25344, 18176,
													     	43520, 25344, 18176,
													     	44288, 17920, 12800,
													     	44288, 17920, 12800,
													     	44288, 17920, 12800,
													     	44288, 17920, 12800,
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,	// index=144
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,
													     	27648, 27648, 14592,
													     	31232, 33280, 22528,
													     	31232, 33280, 22528,
													     	31232, 33280, 22528,
													     	31232, 33280, 22528,
													     	    0, 38656, 26624,
													     	    0, 38656, 26624,
													     	    0, 38656, 26624,
													     	    0, 38656, 26624,
													     	    0, 32768, 27648,
													     	    0, 32768, 27648,
													     	    0, 32768, 27648,
													     	    0, 32768, 27648,
													     	28416, 47872,  5120,	// index=160
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	28416, 47872,  5120,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	 3584, 45568,  3584,
													     	15872, 32000, 19712,	// index=176
													     	15872, 32000, 19712,
													     	15872, 32000, 19712,
													     	15872, 32000, 19712,
													     	    0, 26112,     0,
													     	    0, 26112,     0,
													     	    0, 26112,     0,
													     	    0, 26112,     0,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,
													     	15872, 20244,  5120,	// index=192
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 8704, 16640,     0,
													     	 2816,  7936,     0,	// index=208
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	 2816,  7936,     0,
													     	    0,   512,     0,	// index=224
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,	// index=240
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,   512,     0,
													     	    0,     0,     0};// index=256
		
UInt16		CMPalette::s_palette1007[768] = {65535, 65535, 65535,
																 0,     0,     0,
															65280, 64768, 65280,
															65024, 64256, 64512,
															64512, 63488, 64000,
															64000, 62976, 63232,
															63488, 62208, 62720,
															62976, 61696, 61952,
															62464, 60928, 61184,
															62208, 60416, 60672,
															61696, 59648, 59904,
															61184, 59136, 59392,
															60672, 58368, 58624,
															60160, 57600, 57856,
															59648, 57088, 56832,
															59136, 56320, 56064,
															58880, 55808, 55296,
															58368, 55040, 54528,
															57856, 54528, 53504,
															57344, 53760, 52736,
															56832, 53248, 51968,
															56320, 52480, 51200,
															56064, 51968, 50176,
															55552, 51200, 49408,
															55040, 50688, 48640,
															54528, 49920, 47872,
															54016, 49408, 46848,
															53504, 48640, 46080,
															52992, 48128, 45312,
															52736, 47360, 44544,
															52224, 46848, 43520,
															51712, 46080, 42752,
															51200, 45568, 41984,
															50688, 44800, 41216,
															50176, 44288, 40192,
															49920, 43520, 39424,
															49408, 43008, 38656,
															48896, 42240, 37888,
															48384, 41728, 36864,
															47872, 40960, 36096,
															47360, 40448, 35328,
															46848, 39680, 34560,
															46592, 39168, 33536,
															46080, 38400, 32768,
															45568, 37888, 32000,
															45056, 37120, 31232,
															44544, 36608, 30208,
															44032, 35840, 29440,
															43776, 35328, 28672,
															43264, 34560, 27904,
															42752, 34048, 26880,
															42240, 33280, 26112,
															42496, 33792, 26112,
															42496, 34560, 26112,
															42752, 35072, 25856,
															43008, 35584, 25856,
															43264, 36096, 25856,
															43264, 36864, 25856,
															43520, 37376, 25856,
															43776, 37888, 25600,
															43776, 38656, 25600,
															44032, 39168, 25600,
															44288, 39680, 25600,
															44544, 40192, 25600,
															44544, 40960, 25344,
															44800, 41472, 25344,
															45056, 41984, 25344,
															45056, 42752, 25344,
															45312, 43264, 25344,
															45568, 43776, 25088,
															45824, 44288, 25088,
															45824, 45056, 25088,
															46080, 45568, 25088,
															46336, 46080, 24832,
															46592, 46592, 24832,
															46592, 47360, 24832,
															46848, 47872, 24832,
															47104, 48384, 24832,
															47104, 49152, 24576,
															47360, 49664, 24576,
															47616, 50176, 24576,
															47872, 50688, 24576,
															47872, 51456, 24576,
															48128, 51968, 24320,
															48384, 52480, 24320,
															48384, 53248, 24320,
															48640, 53760, 24320,
															48896, 54272, 24320,
															49152, 54784, 24064,
															49152, 55552, 24064,
															49408, 56064, 24064,
															48896, 55808, 23552,
															48384, 55552, 23040,
															47872, 55296, 22528,
															47360, 55040, 22016,
															47104, 54528, 21504,
															46592, 54272, 20992,
															46080, 54016, 20736,
															45568, 53760, 20224,
															45056, 53504, 19712,
															44544, 53248, 19200,
															44032, 52992, 18688,
															43520, 52736, 18176,
															43008, 52480, 17664,
															42496, 52224, 17152,
															42240, 51712, 16640,
															41728, 51456, 16128,
															41216, 51200, 15616,
															40704, 50944, 15104,
															40192, 50688, 14592,
															39680, 50432, 14336,
															39168, 50176, 13824,
															38656, 49920, 13312,
															38144, 49664, 12800,
															37632, 49408, 12288,
															37376, 48896, 11776,
															36864, 48640, 11264,
															36352, 48384, 10752,
															35840, 48128, 10240,
															35328, 47872, 9728,
															34816, 47616, 9216,
															34304, 47360, 8704,
															33792, 47104, 8192,
															33280, 46848, 7936,
															32768, 46592, 7424,
															32512, 46080, 6912,
															32000, 45824, 6400,
															31488, 45568, 5888,
															30976, 45312, 5376,
															30464, 45056, 4864,
															29952, 44800, 4864,
															29696, 44544, 4608,
															29184, 44288, 4608,
															28672, 44032, 4352,
															28416, 43776, 4352,
															27904, 43520, 4096,
															27392, 43264, 4096,
															26880, 43008, 3840,
															26624, 42752, 3840,
															26112, 42496, 3584,
															25600, 42240, 3584,
															25344, 41984, 3328,
															24832, 41728, 3328,
															24320, 41472, 3072,
															24064, 41216, 3072,
															23552, 40960, 2816,
															23040, 40704, 2816,
															22784, 40448, 2560,
															22272, 40192, 2560,
															21760, 39936, 2304,
															21248, 39680, 2304,
															20992, 39424, 2048,
															20480, 39168, 2048,
															19968, 38912, 1792,
															19712, 38656, 1792,
															19200, 38400, 1536,
															18688, 38144, 1536,
															18432, 37888, 1280,
															17920, 37632, 1280,
															17408, 37376, 1024,
															17152, 37120, 1024,
															16640, 36864, 768,
															16128, 36608, 768,
															15616, 36352, 512,
															15360, 36096, 512,
															14848, 35840, 256,
															14336, 35584, 256,
															14080, 35328, 0,
															13568, 35072, 0,
															13568, 35072, 0,
															13312, 34816, 0,
															13312, 34816, 0,
															13312, 34560, 256,
															13056, 34560, 256,
															13056, 34304, 256,
															12800, 34304, 256,
															12800, 34048, 256,
															12800, 34048, 256,
															12544, 33792, 256,
															12544, 33792, 256,
															12544, 33536, 512,
															12288, 33536, 512,
															12288, 33280, 512,
															12032, 33280, 512,
															12032, 33024, 512,
															12032, 33024, 512,
															11776, 32768, 512,
															11776, 32768, 512,
															11776, 32768, 768,
															11520, 32512, 768,
															11520, 32512, 768,
															11264, 32256, 768,
															11264, 32256, 768,
															11264, 32000, 768,
															11008, 32000, 768,
															11008, 31744, 768,
															11008, 31744, 1024,
															10752, 31488, 1024,
															10752, 31488, 1024,
															10496, 31232, 1024,
															10496, 31232, 1024,
															10496, 30976, 1024,
															10240, 30976, 1024,
															10240, 30720, 1024,
															10240, 30720, 1280,
															9984, 30464, 1280,
															9984, 30464, 1280,
															9728, 30208, 1280,
															9728, 30208, 1280,
															9472, 29952, 1280,
															9216, 29696, 1280,
															9216, 29440, 1280,
															8960, 28928, 1280,
															8704, 28672, 1280,
															8448, 28416, 1280,
															8192, 28160, 1280,
															7936, 27904, 1280,
															7936, 27648, 1280,
															7680, 27136, 1280,
															7424, 26880, 1280,
															7168, 26624, 1280,
															6912, 26368, 1280,
															6912, 26112, 1280,
															6656, 25856, 1280,
															6400, 25344, 1280,
															6144, 25088, 1280,
															5888, 24832, 1280,
															5888, 24576, 1280,
															5632, 24320, 1280,
															5376, 24064, 1280,
															5120, 23808, 1280,
															4864, 23296, 1280,
															4608, 23040, 1280,
															4608, 22784, 1280,
															4352, 22528, 1280,
															4096, 22272, 1280,
															3840, 22016, 1280,
															3584, 21504, 1280,
															3584, 21248, 1280,
															3328, 20992, 1280,
															3072, 20736, 1280,
															2816, 20480, 1280,
															2560, 20224, 1280,
															2304, 19712, 1280,
															2304, 19456, 1280,
															2048, 19200, 1280,
															1792, 18944, 1280,
															1536, 18688, 1280,
															1280, 18432, 1280,
															1280, 18176, 1280,
															1024, 17664, 1280,
															768, 17408, 1280,
															512, 17152, 1280,
															256, 16896, 1280,
			// Left following out to include white and black at the beginning
															//0, 16640, 1280,	
															0, 16384, 1280,
			// Left following out to include white and black at the beginning
															//0, 15872, 1280,	
															0, 15616, 1280};	// index=256
                      					


//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		CMPalette
//
//	Software purpose:	Constructor 
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	None  				
// 
// Called By:	
//
//	Coded By:			Larry L. Biehl			Date: 06/05/1995
//	Revised By:			Larry L. Biehl			Date: 02/26/1997	

CMPalette::CMPalette ()

{    
	#if defined multispec_wx
		CMPalette (256);
		//mPaletteObject = 0;
	#endif

	#if defined multispec_win
		mPaletteObject = NULL;                                              
	#endif
	
}	// end "CMPalette"


#if defined multispec_wx
//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		CMPalette
//
//	Software purpose:	Constructor 
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	None  				
// 
// Called By:	
//
//	Coded By:			Abdur Maud				Date: ??/??/2015
//	Revised By:			Larry L. Biehl			Date: 12/19/2018

CMPalette::CMPalette (
				SInt16								numberEntries) 
{
	int 									index;
	UInt16								numberColors = numberEntries;


	//mPaletteObject = 1;
	mNumberEntries = numberEntries;
	m_loadedFlag = FALSE;

	numberColors = numberEntries;

			// Fill all 256 entries with white
	
	for (index=0; index<256; index++)
		{
		mPaletteObject[index].red = 255;
		mPaletteObject[index].green = 255;
		mPaletteObject[index].blue = 255;

		}	// end "for (index=0; index<256; index++)"
		
	//Create (numberColors, redpalette, greenpalette, bluepalette);
	  
}	// end "CMPalette"
#endif


//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		~CMPalette
//
//	Software purpose:	Destructor 
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	None  				
// 
// Called By:	
//
//	Coded By:			Larry L. Biehl			Date: 06/05/1995
//	Revised By:			Larry L. Biehl			Date: 02/26/1997	

CMPalette::~CMPalette ()

{               

}	// end "~CMPalette"
                                                     

#if defined multispec_win
//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		void LoadRGBQUADStructure
//
//	Software purpose:	The purpose of this routine is to copy the current
//							palette to the input RGBQUAD structure.
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	number of entries in the Palette
// 
// Called By:
//
//	Coded By:			Larry L. Biehl			Date: 04/27/1995
//	Revised By:			Larry L. Biehl			Date: 02/22/1997	
                       		      
Boolean CMPalette::LoadRGBQUADStructure (
				RGBQUAD								*rgbQuadPtr,
				SInt16								wUsage)     

{  
	Boolean				continueFlag = TRUE;
	SInt16				index;         
  		                       
	                  
	if (wUsage == DIB_RGB_COLORS)
		{                                                        
   	if (GetPaletteEntries (0, mNumberEntries, (PALETTEENTRY*)rgbQuadPtr) !=
																				(UInt16)mNumberEntries)
  			continueFlag = FALSE; 
  		
  		if (continueFlag)
  			{	                           
			UInt8	savedValue; 
			
	  				// reverse the blue and red values.  PALETTEENTRY stores
	  				// the values as red-green-blue. RGBQuad stores the values
	  				// as blue-green-red
	  						
			for (index=0; index<mNumberEntries; index++)
				{
				savedValue = rgbQuadPtr->rgbBlue;
				rgbQuadPtr->rgbBlue = rgbQuadPtr->rgbRed;
				rgbQuadPtr->rgbRed = savedValue;
				rgbQuadPtr->rgbReserved = 0;
				rgbQuadPtr++;
				
				}	// end "for (index=0, index<mNumberEntries, index++)"
				
			}	// end "if (continueFlag)"
				
		}	// end "if (wUsage == DIB_RGB_COLORS)" 
 
	if (wUsage == DIB_PAL_COLORS)
		{
		UInt16* tableIndexPtr = (UInt16*)rgbQuadPtr;
		
		for (index=0; index<256; index++)
			{
			if (index >= mNumberEntries)
				*tableIndexPtr = 0;
				
			else	// index < mNumberEntries
				*tableIndexPtr = index;
				
			tableIndexPtr++;
			
			}	// end "for (index=0, index<mNumberEntries, index++)"
			
		}	// end "if (wUsage == DIB_PAL_COLORS)"
			
	return (continueFlag);                       
      	
}	// end "LoadRGBQUADStructure"
#endif	// defined multispec_win 
                                                                  


//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		SInt16 GetNumberPaletteEntries
//
//	Software purpose:	The purpose of this routine is to return the
//							number of entries in the palette.
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	number of entries in the Palette
// 
// Called By:
//
//	Coded By:			Larry L. Biehl			Date: 04/27/1995
//	Revised By:			Larry L. Biehl			Date: 04/27/1995	

SInt16 CMPalette::GetNumberPaletteEntries (void)

{          
	return (mNumberEntries);
  
}	// end "GetNumberPaletteEntries" 
                                                                  


//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		void SetNumberPaletteEntries
//
//	Software purpose:	The purpose of this routine is to return the
//							number of entries in the palette.
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	number of entries in the Palette
// 
// Called By:
//
//	Coded By:			Larry L. Biehl			Date: 11/03/1995
//	Revised By:			Larry L. Biehl			Date: 11/03/1995	

void CMPalette::SetNumberPaletteEntries (
				SInt16								numberEntries)

{          
	mNumberEntries = numberEntries;
	     
}	// end "SetNumberPaletteEntries"  
                                                                  


//------------------------------------------------------------------------------------
//                   Copyright 1988-2020 Purdue Research Foundation
//
//	Function name:		void SetPalette
//
//	Software purpose:	The purpose of this routine is to load palette 1001.
//
//	Parameters in:		None
//
//	Parameters out:	None
//
// Value Returned:	number of entries in the Palette
// 
// Called By:
//
//	Coded By:			Larry L. Biehl			Date: 03/12/1996
//	Revised By:			Larry L. Biehl			Date: 12/19/2018

void CMPalette::SetPalette (
				SInt16								paletteId)

{      
	UInt16*								palettePtr = NULL;
			
	UInt16								blueIndex,
											greenIndex,
											index,
											numberColors,
											redIndex;
	
	
	#if defined multispec_win
		PALETTEENTRY						paletteEntry; 
		
								
		if (paletteId == 1001)
			palettePtr = s_palette1001; 
	
		else if (paletteId == 1002)  
			palettePtr = s_palette1002;

		else if (paletteId == 1003)  
			palettePtr = s_palette1003;
	
		else if (paletteId == 1004)  
			palettePtr = s_palette1004; 
	
		else if (paletteId == 1005) 
			palettePtr = s_palette1005; 
	
		else if (paletteId == 1006)
			palettePtr = s_palette1006;
	
		else if (paletteId == 1007)
			palettePtr = s_palette1007;
								  
		if (palettePtr == NULL)
																									return;          
												
		numberColors = GetNumberPaletteEntries ();
		redIndex = 0;
		greenIndex= 1;
		blueIndex = 2;
			
		for (index=0; index<numberColors; index++)
			{           
			paletteEntry.peRed = (UInt8)(palettePtr[redIndex] >> 8);
			paletteEntry.peGreen = (UInt8)(palettePtr[greenIndex] >> 8);
			paletteEntry.peBlue = (UInt8)(palettePtr[blueIndex] >> 8);
			//paletteEntry.peFlags = PC_NOCOLLAPSE;              
			paletteEntry.peFlags = PC_RESERVED; 
												
			SetPaletteEntries (index, 1, &paletteEntry);
			
			redIndex += 3;
			greenIndex += 3;
			blueIndex += 3;
			
			}	// end "for (index=0; index<numberColors; index++)"
	#endif	// defined multispec_win

	#if defined multispec_wx
		if (paletteId == 1001)
			palettePtr = s_palette1001;

		else if (paletteId == 1002)
			palettePtr = s_palette1002;

		else if (paletteId == 1003)
			palettePtr = s_palette1003;

		else if (paletteId == 1004)
			palettePtr = s_palette1004;

		else if (paletteId == 1005)
			palettePtr = s_palette1005;

		else if (paletteId == 1006)
			palettePtr = s_palette1006;

		else if (paletteId == 1007)
			palettePtr = s_palette1007;

		if (palettePtr == NULL)
																									return;

		numberColors = GetNumberPaletteEntries ();
		
		redIndex = 0;
		greenIndex = 1;
		blueIndex = 2;

		for (index=0; index<numberColors; index++)
			{
			mPaletteObject[index].red = (UInt8)(palettePtr[redIndex] >> 8);
			mPaletteObject[index].green = (UInt8)(palettePtr[greenIndex] >> 8);
			mPaletteObject[index].blue = (UInt8)(palettePtr[blueIndex] >> 8);
			redIndex += 3;
			greenIndex += 3;
			blueIndex += 3;

			}	// end "for (index=0; index<numberColors; index++)"
			
		//Create (numberColors, redpalette, greenpalette, bluepalette);
	#endif	// defined multispec_wx
	
}	// end "SetPalette" 
